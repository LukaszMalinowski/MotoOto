openapi: 3.0.0
info:
  description: Documentation for MotoOto api
  version: 1.0.0
  title: "MotoOto"
# host: "localhost:8080"
# basePath: "/api"
tags:
  - name: auth
    description: auth endpoints
paths:
  /auth/login:
    post:
      tags:
        - auth
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCredentials"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        400:
          description: Bad request - propably data wasn't validated
          content:
            application/json:
              schema:
                type: string
                example: Email not valid
        401:
          description: Unauthorized
  /auth/register:
    post:
      tags:
        - auth
      requestBody:
        description: Registration details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        400:
          description: Bad request - propably data wasn't validated
          content:
            application/json:
              schema:
                type: string
                example: Email not valid
        409:
          description: User already exists
components:
  schemas:
    UserCredentials:
      type: object
      properties:
        username:
          type: string
          example: test@user.com
        password:
          type: string
          example: qwerty123
    UserDto:
      type: object
      properties:
        username:
          type: string
          example: newUser
        email:
          type: string
          example: new@user.com
        password:
          type: string
          example: qwerty123
    Car:
      type: object
      properties:
        id:
          type: integer
          example: 1
        brand:
          type: string
          example: Volkswagen
        model:
          type: string
          example: Golf
        generation:
          type: string
          example: IV
        fuelType:
          type: string
          example: Diesel
        productionYear:
          type: integer
          example: 2003
        carMilage:
          type: number
          example: 25000.00
        imageURL:
          type: string
          example: https://i.imgur.com/9SRjcNI.jpeg
        price:
          type: number
          example: 5000.00
